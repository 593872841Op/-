Chapter 接口测试
一：接口基础

- 接口简介

- interface 信息之间传递的方式和渠道；信息内外传递的方式和渠道

- 分类

  - UI (User interface):
  - API(application programming interface): 
    - 本地api （local api）：内存共享实现信息之间传递的方式和渠道；单元测试；集成测试...虽然是测试接口，不称为接口测试
    - 远程api （remote api）：
      - 公共网络协议远程API:
      - 自定义协议远程API:

- 接口实现方式

  - RPC(Remote Procedure Call) 远程过程调用：-----自定义协议多；http也有

  - Web SERVICE分类：：--------http；返回有header，body主要以json为主

    - 1 SOAP：()

      - 使用.xml格式；

      - Xtension markup language，发展于html，是html的一种特殊格式

      - 和html语法相同；都是用双标签和单标签；

      - 不同点：xml没有任何内置的预定义标签名和属性名；

        ​

    - 2 HTTP（过渡）：

      - 采用和网站url传参相同方式进行参数传递。（ecmobile是http接口）

      - 请求不是json请求，可以从Content-Type和json=判断

      - > Fiddler抓包ecmobile登录的接口：
        >
        > POST http://shop.ecmobile.cn/ecmobile/?url=/user/signin HTTP/1.1
        > Accept-Encoding: gzip
        > Content-Length: 65
        > Content-Type: **application/x-www-form-urlencoded**
        > Host: shop.ecmobile.cn
        > Connection: Keep-Alive
        >
        > json=%7B%22name%22%3A%22123%22%2C%22password%22%3A%22123456%22%7D
        >
        > 响应是json

    - 3 REST，RESTful：Representational State Transfer 表述性状态传递 （主流）

      - 采用json格式传递数据

      - json：javascript object notation:js对象族谱 

      - 语法类似于python中的字典。节点。一对大括号引用的由逗号隔开的节点

      - 节点："节点名"："节点值"。必须是双引号；节点值必须是String类，number类，Array类，和json类。数组中的元素也必须是这些类型。

      - 同层json中节点名不得重复。

      - > Fiddler抓包localhost:8002登录的接口抓的请求数据：
        >
        > POST http://localhost:8002/student/rest/login HTTP/1.1
        > Content-Type: application/json
        > User-Agent: PostmanRuntime/7.28.4
        > Accept: */*
        > Postman-Token: 829627dc-8021-45fc-bcf5-634f1976c523
        > Host: localhost:8002
        > Accept-Encoding: gzip, deflate, br
        > Connection: keep-alive
        > Content-Length: 87
        >
        > {
        >
        > ```
        > "student": {
        >     "username":"user1",
        >     "password":"abc123"
        > }
        > ```
        >
        > }

        ​

  - 网站服务器：返回主要以json为主；有.xml, .txt等。



二 接口测试环境

- 1，student接口服务器
- 2，ecmobile接口服务器和app
- 3，www.showapi.com注册购买api


三 接口测试简介

- 本次测试：web service远程API接口。
- 目的：早期进行接口测试，解决接口之间调用的问题，可以保证系统测试时更快的效率。
- 测试环境：开发环境（需要开发工具）
- 测试类型：
  - 接口功能
    - 各种传参--->url; header; body; 请求方法；
    - 参数值的必填/选填
  - 接口性能：例：并发量
  - 接口的安全性
  - 接口的兼容性
  - 接口的可靠性
  - 接口的弱网测试：
  - 多接口组合的业务逻辑调用关系：白盒测试（**面试必问**）
- 测试关注点：
  - 只关注数据，不关注界面。因为接口本质上没有界面
  - 多接口组合的业务逻辑调用关系
- 测试基本流程
  1. 开发获取接口文档
  2. 配合fiddler抓包熟悉接口
  3. 分析接口功能业务，设计测试点和测试用例，并评审。
     - 接口测试内容是没有点击，输入，打开等文字
     - 只有调用某某接口，传递什么参数，检查什么返回结果。
  4. 搭建接口测试环境；主要就是安装接口测试工具
  5. 执行接口测试。
  6. 如果有缺陷，则开缺陷报告，待修复后，回归测试
- 接口测试方法
  - 黑盒测试
  - 手工测试和自动化测试

四 Soap UI

- 专门测试soap接口的接口测试接口

- localhost:8002获得：.xml规格URL，和soap的api文档。

- Simple Object Access Protocal 简单对象访问协议。**基于http协议，特点是所有请求都是post请求。请求传参和返回响应都是.xml格式，**即为WSDL:webservice description language

- Soap UI 工具：自动生成.xml格式，只有传参就可以

  ​

五 fiddler

抓包

六 postman

- 简单的手工测试

  - 1 请求方法post/get

  - 2 url

  - 3 传参

    - parameter-是跟随在url？后面的参数值：一般在get
    - body-
      - raw-json/xml (REST)
      - x-www-form-urlencoded (HTTP)

  - 4 头部：Accesstoken

    ​

- 多接口的自动化测试

  - 1，准备工作：，打开fiddler，tomcat，phpstudy，Navicat，postman设置-代理改为自定义

  - 2，mysql获取csv数据：查单科分，制成csv表。

  - 3，postman添加集合：一个登录请求；一个退出登录请求；一个查单科分请求；

  - 4，设置全局变量：protocol：http；http；

  - 5，环境变量：分为测试环境：url；localhost:8002；localhost:8002；之后小眼睛旁边设置为测试环境。

  - 6，修改--退出登录请求：（请求方法；url；body；Header参考api文档）

    - 断言：

      ```
      pm.test("退出登录", function(){
        pm.response.to.have.status(200);
      });
      if(pm.response.status>=400)
      	postman.setNextRequest(null);
      ```

      ​

  - 7，修改登录请求：（请求方法；url；body；Header参考api文档）

    - 断言：

      ```
      var JsonData = pm.response.json();
      pm.test("登录", function(){
        pm.expect(JsonData.student.status).to.eql(1);
      });
      if(JsonData.student.status ==1){
        pm.environment.set("token",JsonData.student.token);
        pm.environment.set("id",JsonData.student.id);
        pm。environment.set("lesson",data.lesson);
      }
      else:
      	postman.setNextReauest(null);
      ```

      ​

  - 8，修改查单科分请求：（请求方法；url；body；Header参考api文档）

    - 断言：

    - ```
      pm.test("查单科分", function(){
        var JsonData = pm.response.json();
        pm.expect(JsonData.score.score).to.eql(data.each);
        //s = pm.response.json();
        //pm.expect(s.score.score).to.eql(data.each);
      });
      ```

      ​



断言讲解：：

```
一 断言方法1：状态码：代码为200
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

1 讲解：
pm里test方法，需要两个参数。
1）断言名称"Status code is 200"：仅用于测试结果的显示
2）是匿名函数function ()：大括号里的pm.response.to.have.status(200);为函数的内容，即为要做的测试具体内容。

2 修改为：
pm.test("退出登录", function () {
    pm.response.to.have.status(200);
});
if (pm.response.status >= 400);
postman.setNextRequest("null");
//if判断语句为：返回状态码大于400的情况下，不执行下一步操作。 

二 断言方法1：响应正文：json值检查：
pm.test("Your test name", function () {
    var jsonData = pm.response.json();
    pm.expect(jsonData.value).to.eql(100);
});

1 讲解:匿名函数：
首先是var jsonData = pm.response.json();定义一个变量接收返回值；
然后pm.expect(jsonData.value).to.eql(100);postman期望某实际结果要等于期望值。
这里是期望响应的json数据中的student节点下的status节点的值要等于1。
json路径：json节点名......pm.expect("实际值").to.eql("期望值");

2 修改为：
var jsonData = pm.response.json();//将响应转json
pm.test("学生登录", function () {
    pm.expect(jsonData.student.status).to.eql(1);
});
if(jsonData.student.status==1){
   //定义环境变量，保存token和id用于查总分请求传参
    pm.environment.set("token", jsonData.student.token);
    pm.environment.set("id", jsonData.student.id);
    //从csv文件获取课程名，定义为环境变量
    pm.environment.set("lesson",data.lesson);
}
else
  postman.setNextRequest(null);
```



七 jmeter


八 测试

-http://localhost:8002/

1，正确的登录

2 ，错误的登录

4 ，查总分：带口令/不带口令/查别人

。。。。。。

5 退出：带着用户名密码退出

项目4：ecmobie接口
